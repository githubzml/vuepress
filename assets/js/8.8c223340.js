(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{170:function(t,e,n){"use strict";n.r(e);var a=n(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("所谓的递归函数就是在函数体内调用本函数。使用递归函数一定要注意，处理不当就会进入死循环。递归函数只有在特定的情况下使用 ，比如阶乘问题。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),n("p",[t._v("arguments.callee 指向正在执行的函数的指针。")]),t._v(" "),n("p",[t._v("警告：在严格模式下，第 5 版 ECMAScript (ES5) 禁止使用 arguments.callee()。当一个函数必须调用自身的时候, 避免使用 arguments.callee(), 通过要么给函数表达式一个名字,要么使用一个函数声明.")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments/callee",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),n("OutboundLink")],1)]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),n("hr"),t._v(" "),n("p",[t._v("版权声明：本文为 CSDN 博主「luck_lin」的原创文章，遵循 CC 4.0 by-sa 版权协议，转载请附上原文出处链接及本声明。")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qwe502763576/article/details/79050427",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文链接"),n("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"递归计算阶乘的例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归计算阶乘的例子","aria-hidden":"true"}},[this._v("#")]),this._v(" 递归计算阶乘的例子")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n        <title>js中递归函数的使用</title>\n        <script type="text/javascript">\n            function f(num){\n                if(num<1){\n                    return 1;\n                }else{\n                    return f(num-1)*num;\n                }\n            }\n        <\/script>\n    </head>\n    <body>\n        <script type="text/javascript">\n            alert("10!的结果为："+f(10));\n        <\/script>\n    </body>\n</html>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"js-递归函数调用自身时的保险方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-递归函数调用自身时的保险方式","aria-hidden":"true"}},[this._v("#")]),this._v(" js 递归函数调用自身时的保险方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"一般思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一般思路","aria-hidden":"true"}},[this._v("#")]),this._v(" 一般思路")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function fact(num){\n    if (num<=1){\n        return 1;\n    }else{\n        return num*fact(num-1);\n    }\n}\nvar anotherFact = fact;\nfact = null;\nalert(antherFact(4)); //由于fact已经不是函数了，所以出错。\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用-arguments-callee"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-arguments-callee","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 arguments.callee")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function fact(num){\n    if (num<=1){\n        return 1;\n    }else{\n        return num*arguments.callee(num-1); //此处更改了。\n    }\n}\nvar anotherFact = fact;\nfact = null;\nalert(antherFact(4)); //结果为24.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"阿里巴巴-2015-年前端面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阿里巴巴-2015-年前端面试题","aria-hidden":"true"}},[this._v("#")]),this._v(" 阿里巴巴 2015 年前端面试题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("请实现一个fibonacci函数，要求其参数和返回值如下所示：\n/**\n *@desc: fibonacci\n *@param: count {Number}\n *@return: result {Number} 第count个fibonacci值，计数从0开始\n  fibonacci数列为：[1, 1, 2, 3, 5, 8, 13, 21, 34 …]\n  则getNthFibonacci(0)返回值为1\n  则getNthFibonacci(4)返回值为5\n */\nfunction getNthFibonacci(count) {\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"标准答案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标准答案","aria-hidden":"true"}},[this._v("#")]),this._v(" 标准答案")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function fib(count) {\n    //参数判断\n    var count = parseInt(count);\n    if (isNaN(count) || count < 0) {\n        return 0;\n    }\n\n    function f(count) {\n        if (count <= 1)\n            return 1;\n        return arguments.callee(count - 1) + arguments.callee(count - 2);    //callee是装逼用的，直接用f也行\n    }\n    return f(count);\n}\n")])])])}],!1,null,null,null);r.options.__file="README.md";e.default=r.exports}}]);